{"version":3,"sources":["logo.svg","actions/types.js","actions/index.js","components/TodoInput.js","components/TodoItem.js","components/VisibleTodoList.js","components/TodoListContainer.js","App.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","types","actions","value","type","id","TodoInput","_ref","input","addTodo","allDone","react_default","a","createElement","className","onSubmit","e","preventDefault","trim","ref","node","placeholder","onClick","TodoItem","todo","delTodoClick","style","textDecoration","completed","checked","onChange","text","VisibleTodoList","todos","onTodoClick","deleteTodo","sortedTodos","filter","concat","map","components_TodoItem","key","mapDispatchToProps","Actions","TodoListContainer","connect","state","getVisibleTodos","visibilityFilter","components_TodoInput","components_VisibleTodoList","t","App","components_TodoListContainer","Component","initialState","arguments","length","undefined","action","Object","toConsumableArray","item","objectSpread","todolistApp","combineReducers","Boolean","window","location","hostname","match","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","render","es","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wMCOzBC,eAPE,YAOFA,EANK,cAMLA,EALK,cAKLA,EAJE,WAIFA,EAFe,wBC2BfC,EA9BC,SAAAC,GAAK,MAAK,CACxBC,KAAMH,EACNE,MAAOA,IA4BMD,EAzBI,SAAAG,GAAE,MAAK,CACxBD,KAAMH,EACNI,OAuBaH,EApBI,SAAAG,GAAE,MAAK,CACxBD,KAAMH,EACNI,OAkBaH,EAfC,iBAAO,CACrBE,KAAMH,ICaOK,EA7BG,SAAAC,GAA0B,IACtCC,EADeC,EAAuBF,EAAvBE,QAASC,EAAcH,EAAdG,QAE5B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACdC,SAAU,SAAAC,GACRA,EAAEC,iBACGT,EAAML,MAAMe,SAGjBT,EAAQD,EAAML,OACdK,EAAML,MAAQ,MAGhBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBACfK,IAAK,SAAAC,GACHZ,EAAQY,GAEVC,YAAY,aAEdV,EAAAC,EAAAC,cAAA,UAAQT,KAAK,SAASU,UAAU,yCAAhC,4BACAH,EAAAC,EAAAC,cAAA,UAAQR,GAAG,WAAWS,UAAU,wCAAwCQ,QAASZ,GAAjF,gCCXKa,EAXE,SAAAhB,GAAA,IAAGiB,EAAHjB,EAAGiB,KAAMF,EAATf,EAASe,QAASG,EAAlBlB,EAAkBkB,aAAlB,OACfd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,SAAOa,MAAO,CAAEC,eAAgBH,EAAKI,UAAY,eAAiB,SAChEjB,EAAAC,EAAAC,cAAA,SAAOT,KAAK,WAAWyB,QAASL,EAAKI,UAAWE,SAAUR,IAD5D,IACyEE,EAAKO,MAE9EpB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gDAAgDQ,QAASG,GAAcd,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCCOhGkB,EAZS,SAAAzB,GAAwC,IAArC0B,EAAqC1B,EAArC0B,MAAOC,EAA8B3B,EAA9B2B,YAAaC,EAAiB5B,EAAjB4B,WACvCC,EAAcH,EAAMI,OAAO,SAAAb,GAAI,OAAKA,EAAKI,YAAWU,OAAOL,EAAMI,OAAO,SAAAb,GAAI,OAAIA,EAAKI,aAC3F,OACAjB,EAAAC,EAAAC,cAAA,MAAIR,GAAG,WAAWS,UAAU,iBAExBsB,EAAYG,IAAI,SAAAf,GAAI,OAClBb,EAAAC,EAAAC,cAAC2B,EAAD,CAAUC,IAAKjB,EAAKnB,GAAImB,KAAMA,EAAMF,QAAS,kBAAMY,EAAYV,EAAKnB,KAAKoB,aAAc,kBAAMU,EAAWX,EAAKnB,WCwB/GqC,EAAqB,CACzBR,YAAa,SAAA7B,GAAE,OAAIsC,EAAmBtC,IACtCI,QAAS,SAAAN,GAAK,OAAIwC,EAAgBxC,IAClCgC,WAAY,SAAA9B,GAAE,OAAIsC,EAAmBtC,IACrCK,QAAS,kBAAMiC,MASFC,EANWC,YAXF,SAAAC,GAAK,MAAK,CAChCb,MAAOc,EAAgBD,EAAMb,MAAOa,EAAME,oBAY1CN,EAFwBG,CAlCT,SAAAtC,GAAA,IAAG0B,EAAH1B,EAAG0B,MAAOC,EAAV3B,EAAU2B,YAAazB,EAAvBF,EAAuBE,QAAS0B,EAAhC5B,EAAgC4B,WAAYzB,EAA5CH,EAA4CG,QAA5C,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACoC,EAAD,CAAWxC,QAASA,EAASC,QAASA,IACtCC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqC,EAAD,CAAiBjB,MAAOA,EAAOC,YAAaA,EAAaC,WAAYA,QAqCrEY,EAAkB,SAACd,EAAOI,GAC9B,OAAQA,GACN,IAAK,WACH,OAAOJ,EACT,IAAK,iBACH,OAAOA,EAAMI,OAAO,SAAAc,GAAC,OAAIA,EAAEvB,YAC7B,IAAK,cACH,OAAOK,EAAMI,OAAO,SAAAc,GAAC,OAAKA,EAAEvB,cC3CnBwB,mLANX,OACEzC,EAAAC,EAAAC,cAACwC,EAAD,aAHYC,4BCHZC,EAAe,CAAC,CACpBlD,GAAI,EACJ0B,KAAM,6BACNH,WAAW,GACV,CACDvB,GAAI,EACJ0B,KAAM,2BACNH,WAAW,GACV,CACDvB,GAAI,EACJ0B,KAAM,mDACNH,WAAW,GACV,CACDvB,GAAI,EACJ0B,KAAM,uCACNH,WAAW,GACV,CACDvB,GAAI,EACJ0B,KAAM,qBACNH,WAAW,IA6BEK,EA1BD,WAAkC,IAAjCa,EAAiCU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBD,EAAcI,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQC,EAAOvD,MACb,KAAKH,EACH,SAAAqC,OAAAsB,OAAAC,EAAA,EAAAD,CACKd,GADL,CAEE,CACEzC,GAAIsD,EAAOtD,GACX0B,KAAM4B,EAAOxD,MACbyB,WAAW,KAGjB,KAAK3B,EACH,OAAO6C,EAAMT,OAAO,SAAAyB,GAAI,OAAIA,EAAKzD,KAAOsD,EAAOtD,KACjD,KAAKJ,EACH,OAAO6C,EAAMP,IAAK,SAAAf,GAAI,OAAIA,EAAKnB,KAAOsD,EAAOtD,GAAnBuD,OAAAG,EAAA,EAAAH,CAAA,GAA4BpC,EAA5B,CAAkCI,WAAYJ,EAAKI,YAAaJ,IAC5F,KAAKvB,EACH,OAAO6C,EAAMP,IAAK,SAAAf,GAAI,OAAIA,EAAKI,UAAYJ,EAAjBoC,OAAAG,EAAA,EAAAH,CAAA,GAA4BpC,EAA5B,CAAkCI,WAAW,MACzE,KAAK3B,EACH,OAAO2D,OAAAG,EAAA,EAAAH,CAAA,GACFd,GAEP,QACE,OAAOA,IClCEE,EAVU,WAAgC,IAA/BF,EAA+BU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvB,WAAYG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQC,EAAOvD,MACb,KAAKH,EACH,OAAO0D,EAAOtB,OAChB,QACE,OAAOS,ICEEkB,EALKC,YAAgB,CAClChC,QACAe,qBCMkBkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCPN,IAAMC,EAAkBJ,OAAOK,sCAAwCC,IAEjEC,EAAQC,YACZC,EACAL,EAAgBM,YAAgBC,OAGlCC,iBACEpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAUN,MAAOA,GACf/D,EAAAC,EAAAC,cAACoE,EAAA,EAAD,KACEtE,EAAAC,EAAAC,cAACqE,EAAD,QAGJC,SAASC,eAAe,SDyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.240f1aa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const ADD_TODO = 'ADD_TODO';\r\nconst DELETE_TODO = 'DELETE_TODO';\r\nconst TOGGLE_TODO = 'TOGGLE_TODO';\r\nconst ALL_DONE = 'ALL_DONE';\r\nconst FETCH_TODOLIST_JSON = 'FETCH_TODOLIST_JSON';\r\nconst SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\n\r\nexport default {\r\n  ADD_TODO,\r\n  DELETE_TODO,\r\n  TOGGLE_TODO,\r\n  ALL_DONE,\r\n  FETCH_TODOLIST_JSON,\r\n  SET_VISIBILITY_FILTER\r\n}","import types from './types';\r\n\r\nconst addTodo = value => ({\r\n  type: types.ADD_TODO,\r\n  value: value\r\n});\r\n\r\nconst deleteTodo = id => ({\r\n  type: types.DELETE_TODO,\r\n  id\r\n});\r\n\r\nconst toggleTodo = id => ({\r\n  type: types.TOGGLE_TODO,\r\n  id\r\n});\r\n\r\nconst allDone = () => ({\r\n  type: types.ALL_DONE,\r\n});\r\n\r\nconst fetchTodolistJson = (json) => ({\r\n  type: types.FETCH_TODOLIST_JSON,\r\n  data: json\r\n});\r\n\r\nconst setVisibilityFilter = filter => ({\r\n  type: types.SET_VISIBILITY_FILTER,\r\n  filter\r\n})\r\n\r\n\r\nexport default {\r\n  addTodo,\r\n  deleteTodo,\r\n  toggleTodo,\r\n  allDone,\r\n  fetchTodolistJson,\r\n  setVisibilityFilter\r\n}","import React from 'react'\r\n\r\nconst TodoInput = ({ addTodo, allDone }) => {\r\n  let input;\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form-inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          if (!input.value.trim()) {\r\n            return\r\n          }\r\n          addTodo(input.value)\r\n          input.value = ''\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <input className=\"form-control col-md-8\"\r\n            ref={node => {\r\n              input = node\r\n            }}\r\n            placeholder=\"Add todo\"\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary form-control col-md-2\">新增待辦</button>\r\n          <button id=\"checkAll\" className=\"btn btn-success form-control col-md-2\" onClick={allDone}>全部完成</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoInput;","import React from 'react'\r\n\r\nconst TodoItem = ({ todo, onClick, delTodoClick }) => (\r\n  <li className=\"ui-state-default\">\r\n    <div className=\"checkbox\">\r\n      <label style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}>\r\n        <input type=\"checkbox\" checked={todo.completed} onChange={onClick} /> {todo.text}\r\n      </label>\r\n      <button className=\"remove-item btn btn-default btn-xs pull-right\" onClick={delTodoClick}><span className=\"glyphicon glyphicon-remove\"></span></button>\r\n    </div>\r\n  </li>\r\n)\r\n\r\nexport default TodoItem;","import React from 'react';\r\nimport TodoItem from './TodoItem'\r\n\r\nconst VisibleTodoList = ({ todos, onTodoClick, deleteTodo }) => {\r\n  const sortedTodos = todos.filter(todo => !todo.completed).concat(todos.filter(todo => todo.completed));\r\n  return (\r\n  <ul id=\"sortable\" className=\"list-unstyled\">\r\n    {\r\n      sortedTodos.map(todo => (\r\n        <TodoItem key={todo.id} todo={todo} onClick={() => onTodoClick(todo.id)} delTodoClick={() => deleteTodo(todo.id)}/>\r\n      ))\r\n    }\r\n  </ul>\r\n)}\r\n\r\nexport default VisibleTodoList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../actions';\r\nimport TodoInput from './TodoInput'\r\nimport VisibleTodoList from './VisibleTodoList'\r\n\r\nconst TodoList = ({ todos, onTodoClick, addTodo, deleteTodo, allDone }) => (\r\n  <div className=\"container\">\r\n    <div className=\"todolist\">\r\n      <h1>React Redux TodoList</h1>\r\n      <TodoInput addTodo={addTodo} allDone={allDone} />\r\n      <hr />\r\n      <VisibleTodoList todos={todos} onTodoClick={onTodoClick} deleteTodo={deleteTodo} />\r\n    </div>\r\n  </div>\r\n)\r\n\r\n// TodoList.propTypes = {\r\n//   todos: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.number.isRequired,\r\n//       completed: PropTypes.bool.isRequired,\r\n//       text: PropTypes.string.isRequired\r\n//     }).isRequired\r\n//   ).isRequired,\r\n//   onTodoClick: PropTypes.func.isRequired\r\n// }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  onTodoClick: id => Actions.toggleTodo(id),\r\n  addTodo: value => Actions.addTodo(value),\r\n  deleteTodo: id => Actions.deleteTodo(id),\r\n  allDone: () => Actions.allDone(),\r\n}\r\n\r\nconst TodoListContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)\r\n\r\n\r\nexport default TodoListContainer;\r\n\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case 'SHOW_ALL':\r\n      return todos\r\n    case 'SHOW_COMPLETED':\r\n      return todos.filter(t => t.completed)\r\n    case 'SHOW_ACTIVE':\r\n      return todos.filter(t => !t.completed)\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport TodoListContainer from './components/TodoListContainer'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <TodoListContainer />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import types from '../actions/types';\r\n\r\nconst initialState = [{\r\n  id: 1,\r\n  text: '複習 React + Redux',\r\n  completed: false\r\n}, {\r\n  id: 2,\r\n  text: '準備履歷',\r\n  completed: false\r\n}, {\r\n  id: 3,\r\n  text: '準備前端面試題目',\r\n  completed: false\r\n}, {\r\n  id: 4,\r\n  text: '帶家人去吃飯',\r\n  completed: false\r\n}, {\r\n  id: 5,\r\n  text: '讀書會',\r\n  completed: false\r\n}];\r\n\r\nconst todos = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.value,\r\n          completed: false\r\n        }\r\n      ]\r\n    case types.DELETE_TODO:\r\n      return state.filter(item => item.id !== action.id)\r\n    case types.TOGGLE_TODO:\r\n      return state.map( todo => todo.id === action.id ? {...todo, completed: !todo.completed} : todo)\r\n    case types.ALL_DONE:\r\n      return state.map( todo => todo.completed ? todo : {...todo, completed: true})\r\n    case types.SET_VISIBILITY_FILTER:\r\n      return {\r\n        ...state\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;","import types from '../actions/types';\r\n\r\nconst visibilityFilter = (state = 'SHOW_ALL', action) => {\r\n  switch (action.type) {\r\n    case types.SET_VISIBILITY_FILTER:\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport default visibilityFilter;","import { combineReducers } from 'redux';\r\nimport todos from './todos';\r\nimport visibilityFilter from './visibilityFilter';\r\n\r\nconst todolistApp = combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n});\r\n\r\nexport default todolistApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport reducers from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducers,\n  composeEnhancer(applyMiddleware(thunk)),\n);\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}